/*!
@page page1 Verde Test Documentation
This is the documentation page for the Verde test suite.   There are several catagories of tests
which are run:

@li @ref ElemTypeTests
@li @ref FlagsTests
@li @ref HexTests
@li @ref HighOrderElemsTests
@li @ref InterfaceTests
@li @ref QuadTests
@li @ref Running
@li @ref TestBugs 
@li @ref TetTests
@li @ref TriangleTests
@li @ref TopologyTests
@li @ref JournalTests


@section VERDETestSuite VERDE Test Suite
The Verde test suite is located in the main verde directory in the \em test directory.  The
test script, verde_test, is a Tcl script.  Tcl is a cross-platform scripting language which must
be installed on the users' machines in order to allow the test suite to run.  


@subsection Running How to Run Tests

To run a test,
simply invoke the test script verde_test:

@p verde_test @p <key(s)>   

The allowed keys are:
@li @b all: runs all tests in the test suite.  WARNING: this may be time consuming
@li @b tri: runs triangle tests
@li @b topology: runs topology tests 
@li @b interface: runs interface tests
@li @b degenerate: runs degenerate element tests
@li @b high_order_elems: runs high order element tests


@subsection Howverde_testWorks How the Test Suite Works 

Individual tests are located in directories below the the \em test directory, according to how they test
VERDE (topology, interface, degenerate elements, etc. ).  Each directory contains a *.test file along with several mesh files (genesis) and sometimes journal files.  The first line of the *.test file contains test keys.  The remaining lines are what a user might enter at a command prompt to execute VERDE, for example:

@p verde @p -batch @p -individual @p tri1.gen 

In the *.test file "verde -batch" is left out, but is added later, when verde_test executes each line.

If the test keys in a given *.test file match those input by the user, then the remaining lines of that *.test file are executed.  All the standard output generated by these executions is piped to a temporary file.  After all lines in the *.test file have been executed this temporary is "diff-ed" with a *.stdout file located in the same directory.  If any differences are reported, then verde_test reports errors.

@subsection RebuildingStdoutFiles Rebuilding Standard Output Files
When developers change in any way the standard output VERDE generates, it becomes necessary to update the *.stdout file so they remain current.  These *.stdout files can be updated/rebuild with the following command:

@p verde_test @p rebuild_stdout @p <key(s)>

@section FlagsTests Flags Tests
This section tests the command line flags available in VERDE.
We should test the following flags:

@li help, version, list_defaults, blocks, notopology, nometrics, nointerface, nodefaults, defaults, output, print_failed_elements, individual

@subsection Flags1 Command: -help
@param Purpose: Test the -help flag to make sure we get the help screen.
@param Flags: -help
@param Pass_Criteria: If we get the help screen, and it prints all possible flags, it passes.
@param Checked_By: Clinton Stimpson
@param Checked_Date: 11 Dec 2001

@subsection Flags2 Command: -version -list_defaults
@param Purpose: make sure we get the possible defaults we can set.
@param Flags: -version -list_defaults
@param Pass_Criteria: If we get the defaults printed to the screen, it passes.
@param Checked_By: Clinton Stimpson
@param Checked_Date: 11 Dec 2001

@subsection Flags3 Command -blocks 1,4,5 antenna_support.gen
@param Purpose: Test the -blocks flag to make sure we get the blocks we specify read in.
@param File_Type: ExodusII
@param File_Contents: 10 Blocks, mixed HEX and SHELL elements.
@param Flags: -blocks 1,4,5
@param Pass_Criteria: If only blocks 1,4,5 were read into VERDE, it passes.
@param Checked_By: Clinton Stimpson
@param Checked_Date: 11 Dec 2001

@subsection Flags4 Command: -notopology -blocks 1-10 antenna_support.gen
@param Purpose: Test -notopology and -blocks flag.
@param File_Type: ExodusII
@param File_Contents: 10 Blocks, mixed HEX and SHELL elements.
@param Flags: -notopology -blocks 1-10
@param Pass_Criteria: If blocks 1-10 are read in and topology calculations are not done, it passes.
@param Checked_By: Clinton Stimpson
@param Checked_Date: 11 Dec 2001

@subsection Flags5 Command: -notopology antenna_support.gen
@param Purpose: Test to see if this command is the same as the previous one.
@param File_Type: ExodusII
@param File_Contents: 10 Blocks, mixed HEX and SHELL elements.
@param Flags: -notopology
@param Pass_Criteria: If blocks 1-10 are read in and topology calculations are not done, it passes.
@param Checked_By: Clinton Stimpson
@param Checked_Date: 11 Dec 2001


@subsection Flags6 Command: -nometrics -nointerface antenna_support.gen
@param Purpose: We should only get topology information.
@param File_Type: ExodusII
@param File_Contents: 10 Blocks, mixed HEX and SHELL elements.
@param Flags: -nometrics -nointerface
@param Pass_Criteria: If blocks 1-10 are read in and only topology calculations are done, it passes.
@param Checked_By: Clinton Stimpson
@param Checked_Date: 11 Dec 2001

@subsection Flags7 Command: -nodefaults -nointerface -nometrics -notopology -blocks 1,2-8 antenna_support.gen
@param Purpose: Test that nothing is done except reading in blocks and exiting.
@param File_Type: ExodusII
@param File_Contents: 10 Blocks, mixed HEX and SHELL elements.
@param Flags: -nodefaults -nointerface -nometrics -notopology -blocks 1,2-8
@param Pass_Criteria: If blocks 1,2-8 are read in and no calculation are done, and if it says VERDE passes, the test passes.
@param Checked_By: Clinton Stimpson
@param Checked_Date: 11 Dec 2001

@subsection Flags8 Command: -defaults defaults_file -blocks 1 antenna_support.gen
@param Purpose: Test that the defaults are set correctly from the file.
@param File_Type: ExodusII
@param File_Contents: 10 Blocks, mixed HEX and SHELL elements.
@param Defaults_File_Contents: Min and max ranges for every metric and every element type is set to [2,0].
@param Flags: -defaults defaults_file -blocks 1
@param Pass_Criteria: If block 1 is read in and every single element in that block "fails" then the test passes.
@param Checked_By: Clinton Stimpson
@param Checked_Date: 11 Dec 2001

@subsection Flags9 Command: -notopology -nointerface -output output_file.gen antenna_support.gen
@param Purpose: Test the -output flag.
@param File_Type: ExodusII
@param File_Contents: 10 Blocks, mixed HEX and SHELL elements.
@param Flags: -notopology -nointerface -output output_file.gen
@param Pass_Criteria: If blocks 1-10 are read in, metrics calculated, and an output file generated, this test passes.
@param Checked_By: Clinton Stimpson
@param Checked_Date: 11 Dec 2001

@subsection Flags10 Command: -notopology -nointerface -nometrics output_file.gen
@param Purpose: Test the output file generated by the previous test.
@param File_Type: ExodusII
@param File_Contents: 11 Blocks, mixed HEX and SHELL elements.
@param Flags: -notopology -nointerface -nometrics
@param Pass_Criteria: If the mesh of 11 blocks is read in and represents the skin, edges, and failed elements of the mesh in the previous test, this test passes.
@param Checked_By: Clinton Stimpson
@param Checked_Date: 11 Dec 2001

@subsection Flags11 Command: -print_failed_elements -individual -blocks 1,8,10 antenna_support.gen
@param Purpose: Test individual and verbose modes.
@param File_Type: ExodusII
@param File_Contents: 10 Blocks, mixed HEX and SHELL elements.
@param Flags: -notopology -blocks 1-10
@param Pass_Criteria: If all failed elements are printed and each block's metrics summary is printed out, this test passes.
@param Checked_By: Clinton Stimpson
@param Checked_Date: 11 Dec 2001

@subsection Flags12 Command: -print_failed_elements -blocks 1,8,10 antenna_support.gen
@param Purpose: Test verbose mode.
@param File_Type: ExodusII
@param File_Contents: 10 Blocks, mixed HEX and SHELL elements.
@param Flags: -print_failed_elements -blocks 1,8,10
@param Pass_Criteria: If all failed elements are printed out, this test passes.
@param Checked_By: Clinton Stimpson
@param Checked_Date: 11 Dec 2001

@section HighOrderElemsTests Higher Order Elements Test
This tests VERDE's ability to handle higher order elements.  The following element types are tested:

@li BAR, BAR2, BAR3, BEAM, BEAM2, and BEAM3
@li HEX, HEX8, HEX9, HEX20, and HEX27
@li QUAD, QUAD4, QUAD5, QUAD8, and QUAD9
@li SHELL, SHELL4, and SHELL8
@li TETRA, TETRA4, TETRA10 and TETRA14
@li TRI3, TRI6, and TRI7

@subsection HighOrderElems1 Commands:
@li bar.gen  
@li bar2.gen  
@li bar3.gen  
@li beam.gen 
@li beam2.gen 
@li beam3.gen

@param Purpose: To make sure that VERDE gives the same results for the above mesh files.
@param File_Type: ExodusII
@param File_Contents: filename shows contents.
@param Pass_Criteria: If results for all mesh files are the same, it passes.
@param Checked_By: Clinton Stimpson
@param Checked_Date: 12 Dec 2001

@subsection HighOrderElems2 Commands:
@li hex.gen
@li hex8.gen
@li hex9.gen
@li hex20.gen
@li hex27.gen
 
@param Purpose: To make sure that VERDE gives the same results for the above mesh files.
@param File_Type: ExodusII
@param File_Contents: filename shows contents.
@param Pass_Criteria: If results for all mesh files are the same, it passes.
@param Checked_By: Clinton Stimpson
@param Checked_Date: 12 Dec 2001

@subsection HighOrderElems3 Commands:
@li quad.gen
@li quad4.gen
@li quad5.gen
@li quad8.gen
@li quad9.gen
 
@param Purpose: To make sure that VERDE gives the same results for the above mesh files.
@param File_Type: ExodusII
@param File_Contents: filename shows contents.
@param Pass_Criteria: If results for all mesh files are the same, it passes.
@param Checked_By: Clinton Stimpson
@param Checked_Date: 12 Dec 2001

@subsection HighOrderElems4 Commands:
@li shell.gen
@li shell4.gen
@li shell8.gen
 
@param Purpose: To make sure that VERDE gives the same results for the above mesh files.
@param File_Type: ExodusII
@param File_Contents: filename shows contents.
@param Pass_Criteria: If results for all mesh files are the same, it passes.
@param Checked_By: Clinton Stimpson
@param Checked_Date: 12 Dec 2001

@subsection HighOrderElems5 Commands:
@li tetra.gen
@li tetra4.gen
@li tetra10.gen
@li tetra14.gen
 
@param Purpose: To make sure that VERDE gives the same results for the above mesh files.
@param File_Type: ExodusII
@param File_Contents: filename shows contents.
@param Pass_Criteria: If results for all mesh files are the same, it passes.
@param Checked_By: Clinton Stimpson
@param Checked_Date: 12 Dec 2001

@subsection HighOrderElems6 Commands:
@li tri.gen
@li tri3.gen
@li tri6.gen
@li tri7.gen
 
@param Purpose: To make sure that VERDE gives the same results for the above mesh files.
@param File_Type: ExodusII
@param File_Contents: filename shows contents.
@param Pass_Criteria: If results for all mesh files are the same, it passes.
@param Checked_By: Clinton Stimpson
@param Checked_Date: 12 Dec 2001



@section InterfaceTests Interface Tests
This tests VERDE's correctness on interface checking.

@sa @ref TestBugs 

@subsection Interface1 Command: -nometrics -notopology hex_coincident_nodes.gen
@param Purpose: Test finding coincidences between hexes.
@param File_Type: ExodusII
@param File_Contents: two completely coincident hexes
@param Flags: -nometrics -notopology
@param Pass_Criteria: If VERDE reports 16 coincident nodes and 6 coincident quads
@param Checked_By: Clinton Stimpson
@param Checked_Date: 12 Dec 2001

@subsection Interface2 Command: -nometrics -notopology tet_coincident_nodes.gen
@param Purpose: Test finding coincidences between tets.
@param File_Type: ExodusII
@param File_Contents: two tets sharing one tri.
@param Flags: -nometrics -notopology
@param Pass_Criteria: If VERDE reports 6 coincident nodes and 1 conincident tri, it passes.
@param Checked_By: Clinton Stimpson
@param Checked_Date: 12 Dec 2001

@subsection Interface3 Command: -nometrics -notopology coincident_quads.gen
@param Purpose: Test finding coincidences coincidence between hexes.
@param File_Type: ExodusII
@param File_Contents: two blocks of hexes sharing some quads.
@param Flags: -nometrics -notopology
@param Pass_Criteria: If VERDE reports 18 coincident nodes and 4 coincident quads, it passes.
@param Checked_By: Clinton Stimpson
@param Checked_Date: 12 Dec 2001

@subsection Interface4 Command: -nometrics -notopology coincident_tris.gen
@param Purpose: Test finding coincidences tets between tets.
@param File_Type: ExodusII
@param File_Contents: two blocks of tets sharing some tris.
@param Flags: -nometrics -notopology
@param Pass_Criteria: If VERDE reports 10 coincident nodes and 4 coincident tris, it passes.
@param Checked_By: Clinton Stimpson
@param Checked_Date: 12 Dec 2001


@section TriangleTests Triangle Tests
This section tests for correct metric, topology, and interface analysis for all tri meshes. Tests will be ran with the 
following default tri metric ranges:

@li Aspect Ratio    1       to 1.3   
@li Area            0       to 1.79769e+308
@li Largest Angle   60      to 90
@li Smallest Angle  30      to 60 
@li Condition No.   1       to 1.3
@li Scaled Jac.     0.5     to 1.155
@li Shear           0.75    to 1
@li Shape           0.75    to 1
@li Relative Size   0.75    to 1
@li Shape and Size  0.75    to 1


@subsection Tri1 Command: tri1.gen
@param Purpose: Test quality metrics and quality failure criteria for triangle elements.
@param File_Type: ExodusII
@param File_Contents: Block 1: 4142 TRI3 elements
@param Flags: -batch
@param Pass_Criteria: @li Falied Shape and Size: 112  
                      @li Falied Aspect Ratio: 1 
                      @li Failed Angle: 3 
                      @li Condition No: 1
                      @li Relative Size: 77
@param Checked_By: 
@param Checked_Date:
@sa test/tri/tri.stdout

@subsection Tri2 Command: tri2.gen
@param Purpose: Test quality metrics and quality failure criteria for triangle elements.
@param File_Type: ExodusII
@param File_Contents: Block 1: 942 TRI3 elements
@param Flags: -batch
@param Pass_Criteria: @li Failed Aspect Ratio: 16 
                      @li Failed Angle: 19 
                      @li Failed Minimum Angle: 9 
                      @li Failed Condition No: 16 
                      @li Failed Scaled Jacobian: 4 
                      @li Failed Shear: 12
                      @li Failed Shape: 14 
                      @li Failed Relative Size: 96 
                      @li Failed Shape and Size: 126
@param Checked_By: 
@param Checked_Date:
@sa test/tri/tri.stdout

@subsection Tri3 Command: tri3.gen
@param Purpose: Test quality metrics and quality failure criteria for triangle elements.
@param File_Type: ExodusII
@param File_Contents: Block 1: 942 TRI3 elements
@param Flags: -batch
@param Pass_Criteria: @li Failed Aspect Ratio: 3 
                      @li Failed Angle: 5 
                      @li Failed Condition No: 3 
                      @li Failed Shear: 2
                      @li Failed Shape: 2 
                      @li Failed Relative Size: 56 
                      @li Failed Shape and Size: 57 
@param Checked_By: 
@param Checked_Date:
@sa test/tri/tri.stdout



@section TopologyTests Topology Tests

This section tests the accuracy of topology tests.  We should test:
@li the correctness of the Euler calculations
and the prediction of topologies for both 2D and 3D
@li all cases of non-manifold edges (vol-vol, vol-surf, vol-edge, surf-edge, vol-surf-edge). 

@subsection Top1 Command: -notopology hex_hex_hinge.g 

@param Purpose: Test for suppression of non-manifold edge checking using -notopology flag
@param File_Type: ExodusII
@param File_Contents: 2 Blocks, each block contains 27 Hex elements
@param Pass_Criteria:  The test should pass without errors or warnings.  There should be no
Topology Metrics in the output. In interactive mode, nothing should show up in the analyze window.
@param Checked_By: Ray J. Meyers
@param Checked_Date: 8 Dec, 2001
@sa test/topology/topology.stdout

@subsection Top2 Command: -nometrics -nointerface hex_hex_hinge.g

@param Purpose: Test for correct topology results
@param File_Type: ExodusII
@param File_Contents: 2 Blocks, each block contains 27 Hex elements
@param Pass_Criteria:  The test should report 3 non-manifold edges. Visual inspection will show these 
edges to lie on the shared curve of the two blocks.  The summary section of output will show that
despite the non-manifold edges, Mesh Topology Tests shows FAIL, VERDE shows FAIL.
@param Checked_By: Clinton Stimpson 
@param Checked_Date: 12 Dec 2001
@sa test/topology/topology.stdout

@subsection Top3 Command: -nometrics -nointerface hex_shell_hinge.g

@param Purpose: Test for detection of non-manifold edges or hinges between hex and shell elements
@param File_Type: ExodusII
@param File_Contents: 2 Blocks, one block contains 27 Hex elements, the second contains 9 SHELL elements
@param Pass_Criteria:  The test should report 3 non-manifold edges. Visual inspection will show these 
edges to lie on the shared curve of the two blocks
@param Checked_By: Clinton Stimpson
@param Checked_Date: 12 Dec 2001
@sa test/topology/topology.stdout

@subsection Top4 Command: -nometrics -nointerface hex_bar_hinge.g

@param Purpose: Test for detection of non-manifold edges or hinges between hex elements
@param File_Type: ExodusII
@param File_Contents: 2 Blocks, one block contains 27 Hex elements, the other contains 3 Bar elements
@param Pass_Criteria:  The test should report 3 non-manifold edges. Visual inspection will show these 
edges to lie on the shared curve of the two blocks
@param Checked_By: Clinton Stimpson
@param Checked_Date: 12 Dec 2001
@sa test/topology/topology.stdout

@subsection Top5 Command: -nometrics -nointerface hex_bar_hinge_one_node.g

@param Purpose: Test for detection of non-manifold edges or hinges between hex elements
@param File_Type: ExodusII
@param File_Contents: 2 Blocks, one block contains 27 Hex elements, the other contains 3 Bar elements
@param Pass_Criteria:  The test should report 1 non-manifold edge. Visual inspection will show this edge
is the bar element connected by a single node to the hex block.
@param Checked_By: 
@param Checked_Date:
@sa test/topology/topology.stdout

@subsection Top6 Command: -nometrics -nointerface shell_bar_hinge.g

@param Purpose: Test for detection of non-manifold edges or hinges between hex elements
@param File_Type: ExodusII
@param File_Contents: 2 Blocks, one block contains 9 SHELL elements, the other contains 3 Bar elements
@param Pass_Criteria:  The test should report 3 non-manifold edges. Visual inspection will show these 
edges to lie on the shared curve of the two blocks
@param Checked_By: Clinton Stimpson
@param Checked_Date: 12 Dec 2001
@sa test/topology/topology.stdout

@subsection Top7 Command: -nometrics -nointerface shell_bar_hinge_one_node.g

@param Purpose: Test for detection of non-manifold edges or hinges between hex elements
@param File_Type: ExodusII
@param File_Contents: 2 Blocks, each block contains 27 Hex elements
@param Pass_Criteria:  The test should report 1 non-manifold edge. Visual inspection will show this edge
is the bar element connected by a single node to the shell block.
@param Checked_By: 
@param Checked_Date:
@sa test/topology/topology.stdout

@subsection Top8 Command: -nometrics -nointerface hex_shell_bar_hinge.g

@param Purpose: Test for detection of non-manifold edges or hinges between hex elements
@param File_Type: ExodusII
@param File_Contents: 3 Blocks, block 1 contains 27 Hex elements, block 2 contains 9 shell elements, 
block 3 contains 3 bar elements
@param Pass_Criteria:  The test should report 3 non-manifold edges. Visual inspection will show these 
edges to lie on the shared curve of all three blocks.
@param Checked_By: Clinton Stimpson
@param Checked_Date: 12 Dec 2001
@sa test/topology/topology.stdout

@subsection Top9 Command: -nometrics -nointerface hex_shell_bar_hinge_one_node.g

@param Purpose: Test for detection of non-manifold edges or hinges between hex elements
@param File_Type: ExodusII
@param File_Contents: 3 Blocks, block 1 contains 27 Hex elements, block 2 contains 9 shell elements, 
block 3 contains 3 bar elements
@param Pass_Criteria:  The test should report 3 non-manifold edges. Visual inspection will show one edge
is the bar element connected by a single node to the shell block, and other edge is the bar element
connected by a single node to the shell block.
@param Checked_By: Clinton Stimpson 
@param Checked_Date: 12 Dec 2001
@sa test/topology/topology.stdout

/*
@subsection Top10 Command: -nometrics -nointerface hex_shell_bar_separate.g

@param Purpose: Test for detection of non-manifold edges or hinges between hex elements
@param File_Type: ExodusII
@param File_Contents: 3 Blocks, block 1 contains 27 Hex elements, block 2 contains 9 shell elements, 
block 3 contains 3 bar elements
@param Pass_Criteria:  The test should report 2 non-manifold edges. Visual inspection will show one edge
is the bar element connected by a single node to the shell block, and other edge is the bar element
connected by a single node to the shell block.
@param Checked_By: 
@param Checked_Date:
@sa test/topology/topology.stdout
*/


@section ElemTypeTests Element Type Tests

This section tests other elements types, namely wedges, knifes, and pyramids, which are not 
included in other tests.  We should test:
@li the correctness of the Metric calculations
@li the correctness of the Topology calculations

@subsection ElemT1 Command: 1knife.gen 

@param Purpose: Test for correct metric and topology calculations for a knife element.
@param File_Type: ExodusII
@param File_Contents: 1 knife element
@param Pass_Criteria:  The test should pass without errors or warnings. 
@param Checked_By: Corey Ernst 
@param Checked_Date: 12 Dec, 2001
@sa test/elemtypes/elemtypes.stdout

@subsection ElemT2 Command: 1wedge.gen 

@param Purpose: Test for correct metric and topology calculations for a wedge element.
@param File_Type: ExodusII
@param File_Contents: 1 wedge element
@param Pass_Criteria:  The test should pass without errors or warnings. 
@param Checked_By: Corey Ernst 
@param Checked_Date: 12 Dec, 2001
@sa test/elemtypes/elemtypes.stdout

@subsection ElemT3 Command: 1pyramid.gen 

@param Purpose: Test for correct metric and topology calculations for a pyramid element.
@param File_Type: ExodusII
@param File_Contents: 1 pyramid element
@param Pass_Criteria:  The test should pass without errors or warnings. 
@param Checked_By: Corey Ernst 
@param Checked_Date: 12 Dec, 2001
@sa test/elemtypes/elemtypes.stdout


@section HexTests Hex Tests
This section tests for correct metric, topology, and interface analysis for all hex meshes. Tests will be ran with the 
following default hex metric ranges:

@li Aspect Ratio    1       to 4   
@li Skew            0       to 0.5
@li Taper           0       to 0.4
@li Volume          0       to 1.79769e+308
@li Stretch         0.25    to 1
@li Diagonal        0.65    to 1
@li Dimension       0       to 1.79769e+308
@li Oddy            -1e-06  to 20
@li Condition No.   0.9999  to 8
@li Jacobian        0       to 1.79769e+308
@li Scaled Jac.     0.5     to 1.01
@li Shear           0.3     to 1
@li Shape           0.3     to 1
@li Relative Size   0.5     to 1
@li Shape and Size  0.2     to 1

@subsection Hex1 Command: hex1.gen 

@param Purpose: Test for correct metric, interface, and topology calculations.
@param File_Type: ExodusII
@param File_Contents: 2 block for HEX8 elements
@param Pass_Criteria: @li Falied Shape and Size: 198 
                      @li Failed Aspect Ratio: 687 
                      @li Falied Skew: 6 
                      @li Falied Stretch: 189 
                      @li Falied Oddy: 717 
                      @li Falied Condition No: 42 
                      @li Falied Shape: 192 
                      @li Falied Relative Size: 15
                      @li Failed Coincident Nodes: 664
@param Checked_By: 
@param Checked_Date:
@sa test/hex/hex.stdout

@sa @ref TestBugs: 

@subsection Hex2 Command: hex2.gen 

@param Purpose: Test for correct metric, interface, and topology calculations.
@param File_Type: ExodusII
@param File_Contents: 1 block for HEX8 elements
@param Pass_Criteria:  @li Failed Relative Size: 86
@param Checked_By: 
@param Checked_Date:
@sa test/elemtypes/hex.stdout

@subsection Hex3 Command: hex3.gen 

@param Purpose: Test for correct metric, interface, and topology calculations.
@param File_Type: ExodusII
@param File_Contents: 1 block for HEX8 elements
@param Pass_Criteria: @li Falied Shape and Size: 62 
                      @li Failed Aspect Ratio: 14
                      @li Falied Skew: 126 
                      @li Falied Stretch: 41 
                      @li Falied Diagonal Ratio: 92 
                      @li Falied Oddy: 32 
                      @li Falied Condition No: 32 
                      @li Falied Scaled Jac: 26
                      @li Falied Shear: 5
                      @li Falied Shape: 33
                      @li Falied Relative Size: 281
@param Checked_By: 
@param Checked_Date:
@sa test/hex/hex.stdout


@section QuadTests Quad Tests
This section tests for correct metric, topology, and interface analysis for all quad meshes. Tests will be ran with the 
following default quad metric ranges:

@li Aspect Ratio    1       to 4   
@li Skew            0       to 0.5
@li Taper           0       to 0.7
@li Warpage         0       to 0.1
@li Area            0       to 1.79769e+308
@li Stretch         0.25    to 1
@li Largest Angle   90      to 135
@li Samllest Angle  45      to 90 
@li Oddy            0       to 16 
@li Condition No.   1       to 4 
@li Jacobian        0       to 1.79769e+308
@li Scaled Jac.     0.5     to 1
@li Shear           0.3     to 1
@li Shape           0.3     to 1
@li Relative Size   0.5     to 1
@li Shape and Size  0.2     to 1

@subsection Quad1 Command: quad1.gen 

@param Purpose: Test for correct metric, interface, and topology calculations.
@param File_Type: ExodusII
@param File_Contents: 2 block for HEX8 elements
@param Pass_Criteria: @li Falied Largest Angle: 1
                      @li Falied Skew: 2 
@param Checked_By: 
@param Checked_Date:
@sa test/quad/quad.stdout

@subsection Quad2 Command: quad2.gen 

@param Purpose: Test for correct metric, interface, and topology calculations.
@param File_Type: ExodusII
@param File_Contents: Block 1: 515 SHELL4 elements
@param Pass_Criteria: @li Falied Largest Angle: 1 
                      @li Falied Skew: 1 
@param Checked_By: 
@param Checked_Date:
@sa test/quad/quad.stdout

@subsection Quad3 Command: quad3.gen 

@param Purpose: Test for correct metric, interface, and topology calculations.
@param File_Type: ExodusII
@param File_Contents: Block 1: 1877 SHELL4 elements
@param Pass_Criteria: @li Falied Largest Angle: 47 
                      @li Failed Smallest Angle: 33 
                      @li Falied Skew: 81 
                      @li Falied Oddy: 1
@param Checked_By: 
@param Checked_Date:
@sa test/quad/quad.stdout

@subsection Quad4 Command: quad4.gen 

@param Purpose: Test for correct metric, interface, and topology calculations.
@param File_Type: ExodusII
@param File_Contents: Block 1: 100 SHELL4 elements
@param Pass_Criteria: No elements fail 
@param Checked_By: 
@param Checked_Date:
@sa test/quad/quad.stdout


@section JournalTests Journal Tests
This section tests Verde's ability to properly export and import valid Exodus II mesh files, create a journal file from commands it executes and perform a proper analysis based on selected preferences (topology, interface, metrics, etc.).

@subsection Journal1 Command: exodus.jou 

@param Purpose: Tests verde's ability to properly export and import valid various Exodus II mesh files 
@param File_Type:
@param File_Contents: 
@param Pass_Criteria:   
@li exported file 'test.gen' contains 2 blocks
@li next exported file 'test.gen' contains 5 blocks
@li next exported file 'test.gen' contains 4 nodesets and 4 sidesets
@li next exported file 'test.gen' contains 4 nodesets and 4 sidesets
@li next exported file 'test.gen' contains 5 nodesets and 7 sidesets
@li next exported file 'test.gen' contains 3 nodesets and 4 sidesets
@param Checked_By: 
@param Checked_Date:
@sa test/journal/journal.stdout


@subsection Journal2 Command: record.jou 

@param Purpose: Tests verde's ability to record and playback a journal file. 
@param File_Type: 
@param File_Contents: 
@param Pass_Criteria:   
@li verde is able to generate a valid and complete journal file, 'temp.jou', and run this file
@li verde stops recording when 'record stop' commands is issued
@param Checked_By: 
@param Checked_Date:
@sa test/journal/journal.stdout


@subsection Journal3 Command: preferences.jou 

@param Purpose: Tests verde's ability perform a proper analysis based on selected preferences (topology, interface, metrics, etc.). 
@param File_Type: 
@param File_Contents: 
@param Pass_Criteria:  Verde performs anlaysis specified by preferences
@param Checked_By: 
@param Checked_Date:
@sa test/journal/journal.stdout

 
@section TetTests Tet Tests
This section tests for correct metric, topology, and interface analysis for all tet meshes. Tests will be ran with the 
following default tet metric ranges:

@li Aspect Ratio    1       to 3   
@li Aspect Gamma    1       to 3 
@li Volume          0       to 1.79769e+308 
@li Condition No.   1       to 3 
@li Jacobian        0       to 1.79769e+308
@li Scaled Jac.     0.5     to 1.414
@li Shear           0.3     to 1
@li Shape           0.3     to 1
@li Relative Size   0.5     to 1
@li Shape and Size  0.2     to 1.01

@subsection Tet1 Command: tet1.gen 

@param Purpose: Test for correct metric, interface, and topology calculations.
@param File_Type: ExodusII
@param File_Contents: Block 1: 8796 TETRA4 elements 
@param Pass_Criteria: @li Falied Shape: 101 
                      @li Falied Aspect: 1 
                      @li Falied Scaled Jac: 769 
                      @li Falied Shear: 728 
                      @li Falied Relative Size: 146 
@param Checked_By: 
@param Checked_Date:
@sa test/tet/tet.stdout

@subsection Tet2 Command: tet2.gen 

@param Purpose: Test for correct metric, interface, and topology calculations.
@param File_Type: ExodusII
@param File_Contents: Block 1: 17711 TETRA4 elements 
@param Pass_Criteria: @li Falied Shape and Size: 255 
                      @li Falied Scaled Jac: 1628 
                      @li Falied Shear: 1454 
                      @li Falied Relative Size: 352 
@param Checked_By: 
@param Checked_Date:
@sa test/tet/tet.stdout

@subsection Tet3 Command: tet3.gen 

@param Purpose: Test for correct metric, interface, and topology calculations.
@param File_Type: ExodusII
@param File_Contents: Block 1: 32065 TETRA4 elements 
@param Pass_Criteria: @li Falied Shape and Size: 664 
                      @li Falied Scaled Jac: 3443 
                      @li Falied Shear: 2480 
                      @li Falied Relative Size: 1294 
@param Checked_By: 
@param Checked_Date:
@sa test/tet/tet.stdout

@subsection Tet4 Command: tet4.gen 

@param Purpose: Test for correct metric, interface, and topology calculations.
@param File_Type: ExodusII
@param File_Contents: Block 1: 17963 TETRA4 elements 
@param Pass_Criteria: @li Falied Shape and Size: 759
                      @li Failed Aspect Ratio: 5 
                      @li Failed Aspect Ratio Gamma: 8
                      @li Failed Condition No: 2 
                      @li Falied Scaled Jac: 2415 
                      @li Falied Shear: 1971 
                      @li Falied Relative Size: 1234 
@param Checked_By: 
@param Checked_Date:
@sa test/tet/tet.stdout



@section TestBugs Test Bugs 
@bug @ref InterfaceTests @em coincidence does not have a consistent definition.
@bug @ref  Hex1 "hex1.gen" This test still has a bug.  Tolerance for coincident nodes is too large for this model.



*/ This is needed for Doxygen to read this file

